---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Contact Us">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 mt-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      <!-- Left Column - Contact Information -->
      <div class="pr-0 md:pr-12">
        <div class="mb-8">
          <h1 class="text-5xl font-bold">
            <span class="text-[#D80032]">Connect</span> with Our
            <br />Team of Experts
          </h1>
          <p class="mt-4 text-gray-700">
            Contact our team of excellence-driven experts today to bring your
            project to life.
          </p>
        </div>

        <div class="flex justify-start mt-10 space-x-8">
          <div class="flex items-center">
            <div class="mr-2">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-[#D80032]"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
                ></path>
              </svg>
            </div>
            <a
              href="tel:713.953.5200"
              class="text-gray-700 hover:text-[#D80032]">713.953.5200</a
            >
          </div>

          <div class="flex items-center">
            <div class="mr-2">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-[#D80032]"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                ></path>
              </svg>
            </div>
            <a
              href="mailto:lp@lja.com"
              class="text-gray-700 hover:text-[#D80032]">lp@lja.com</a
            >
          </div>

          <div class="flex items-center">
            <div class="mr-2">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 text-[#D80032]"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                ></path>
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
            </div>
            <a href="#locations" class="text-gray-700 hover:text-[#D80032]"
              >See Our Locations</a
            >
          </div>
        </div>

        <div class="flex justify-start mt-10 space-x-8">
          <div class="flex items-center">
            <div class="mr-2">
              <iframe
                src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d26646.86666029002!2d79.86592435894816!3d6.880968175103837!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3ae25963120b1509%3A0x2db2c18a68712863!2sUniversity%20of%20Colombo%20School%20of%20Computing%20(UCSC)!5e0!3m2!1sen!2slk!4v1744861061744!5m2!1sen!2slk"
                width="550"
                height="300"
                style="border:0;"
                allowfullscreen=""
                loading="lazy"
                referrerpolicy="no-referrer-when-downgrade"></iframe>
            </div>
          </div>
        </div>
      </div>

      <!-- Right Column - Contact Form -->
      <div class="bg-[#3D0C11] rounded-lg p-8 text-white mt-12 md:mt-0">
        <form id="contactForm" class="needs-validation" novalidate>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
            <div>
              <label for="fullName" class="block text-sm font-medium mb-2"
                >Full Name <span class="text-red-500">*</span></label
              >
              <input
                type="text"
                id="fullName"
                name="fullName"
                placeholder="Full Name"
                class="w-full p-2 rounded text-gray-900"
                required
              />
              <div
                class="text-red-400 text-xs mt-1 hidden error-message"
                id="nameError"
              >
                Please enter your name
              </div>
            </div>
            <div>
              <label for="email" class="block text-sm font-medium mb-2"
                >Email Address <span class="text-red-500">*</span></label
              >
              <input
                type="email"
                id="email"
                name="email"
                placeholder="Email Address"
                class="w-full p-2 rounded text-gray-900"
                required
              />
              <div
                class="text-red-400 text-xs mt-1 hidden error-message"
                id="emailError"
              >
                Please enter a valid email address
              </div>
            </div>
          </div>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
            <div>
              <label for="phone" class="block text-sm font-medium mb-2"
                >Phone Number</label
              >
              <input
                type="tel"
                id="phone"
                name="phone"
                placeholder="Phone Number"
                class="w-full p-2 rounded text-gray-900"
              />
              <div
                class="text-red-400 text-xs mt-1 hidden error-message"
                id="phoneError"
              >
                Please enter a valid phone number
              </div>
            </div>
            <div>
              <label for="location" class="block text-sm font-medium mb-2"
                >Location</label
              >
              <input
                type="text"
                id="location"
                name="location"
                placeholder="Location"
                class="w-full p-2 rounded text-gray-900"
              />
            </div>
          </div>

          <div class="mb-6">
            <label for="message" class="block text-sm font-medium mb-2"
              >Tell Us About Your Project <span class="text-red-500">*</span
              ></label
            >
            <textarea
              id="message"
              name="message"
              rows="6"
              placeholder="Leave your message here"
              class="w-full p-2 rounded text-gray-900"
              required></textarea>
            <div
              class="text-red-400 text-xs mt-1 hidden error-message"
              id="messageError"
            >
              Please tell us about your project
            </div>
          </div>

          <button
            type="submit"
            id="submitBtn"
            class="bg-[#F78CA2] hover:bg-[#D80032] text-white font-medium py-2 px-4 rounded inline-flex items-center"
          >
            <span>SUBMIT</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 ml-2"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z"
                clip-rule="evenodd"></path>
            </svg>
          </button>
        </form>
      </div>
    </div>
  </div>

  <!-- Success Message Toast Notification -->
  <div id="successModal" class="fixed bottom-8 right-8 z-50 hidden">
    <div
      class="bg-gradient-to-r from-[#3D0C11] to-[#D80032] text-white p-4 rounded-lg shadow-lg max-w-sm animate-fade-in"
    >
      <div class="flex items-start">
        <div class="flex-shrink-0 pt-0.5">
          <svg
            class="h-6 w-6 text-white"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M5 13l4 4L19 7"></path>
          </svg>
        </div>
        <div class="ml-3">
          <p class="text-sm font-medium">Success!</p>
          <p class="mt-1 text-xs opacity-90">
            Your message has been sent successfully. We'll get back to you soon.
          </p>
        </div>
        <div class="ml-4 flex-shrink-0 flex">
          <button
            id="closeModal"
            class="inline-flex text-white focus:outline-none"
          >
            <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path
                fill-rule="evenodd"
                d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                clip-rule="evenodd"></path>
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Add this CSS for the fade-in animation -->
  <style>
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    .animate-fade-in {
      animation: fadeIn 0.3s ease-out forwards;
    }
  </style>
</Layout>

<script>
  // Form validation
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("contactForm");
    const successModal = document.getElementById("successModal");
    const closeModalBtn = document.getElementById("closeModal");

    // International phone number validation using regex
    // Accepts various formats including country codes
    function isValidPhone(phone) {
      if (!phone) return true; // Phone is optional
      const phoneRegex =
        /^[+]?[(]?[0-9]{1,4}[)]?[-\s.]?[0-9]{1,4}[-\s.]?[0-9]{1,9}$/;
      return phoneRegex.test(phone);
    }

    // Email validation
    function isValidEmail(email) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    }

    // Show error message
    function showError(field, message) {
      const errorElement = document.getElementById(`${field}Error`);
      if (errorElement) {
        errorElement.textContent = message;
        errorElement.classList.remove("hidden");
        document.getElementById(field).classList.add("border-red-500");
      }
    }

    // Clear error message
    function clearError(field) {
      const errorElement = document.getElementById(`${field}Error`);
      if (errorElement) {
        errorElement.classList.add("hidden");
        document.getElementById(field).classList.remove("border-red-500");
      }
    }

    // Form submission handler
    form.addEventListener("submit", function (event) {
      event.preventDefault();

      let isValid = true;

      // Reset all errors
      document
        .querySelectorAll(".error-message")
        .forEach((el) => el.classList.add("hidden"));
      document
        .querySelectorAll("input, textarea")
        .forEach((el) => el.classList.remove("border-red-500"));

      // Validate name (required)
      const fullName = document.getElementById("fullName").value.trim();
      if (!fullName) {
        isValid = false;
        showError("fullName", "Please enter your name");
      } else {
        clearError("fullName");
      }

      // Validate email (required and format)
      const email = document.getElementById("email").value.trim();
      if (!email) {
        isValid = false;
        showError("email", "Please enter your email address");
      } else if (!isValidEmail(email)) {
        isValid = false;
        showError("email", "Please enter a valid email address");
      } else {
        clearError("email");
      }

      // Validate phone (optional but valid if provided)
      const phone = document.getElementById("phone").value.trim();
      if (phone && !isValidPhone(phone)) {
        isValid = false;
        showError("phone", "Please enter a valid phone number");
      } else {
        clearError("phone");
      }

      // Validate message (required)
      const message = document.getElementById("message").value.trim();
      if (!message) {
        isValid = false;
        showError("message", "Please tell us about your project");
      } else {
        clearError("message");
      }

      // If form is valid, submit it
      if (isValid) {
        // Here you would typically send the data to your server
        // For this example, we'll just show the success notification

        // Show success notification with animation
        successModal.classList.remove("hidden");

        // Hide notification after 5 seconds
        setTimeout(() => {
          successModal.classList.add("hidden");
        }, 5000);

        // Reset form
        form.reset();
      }
    });

    // Close notification when clicking the close button
    closeModalBtn.addEventListener("click", function () {
      successModal.classList.add("hidden");
    });

    // Real-time validation for individual fields
    document.getElementById("email").addEventListener("blur", function () {
      const email = this.value.trim();
      if (email && !isValidEmail(email)) {
        showError("email", "Please enter a valid email address");
      } else {
        clearError("email");
      }
    });

    document.getElementById("phone").addEventListener("blur", function () {
      const phone = this.value.trim();
      if (phone && !isValidPhone(phone)) {
        showError("phone", "Please enter a valid phone number");
      } else {
        clearError("phone");
      }
    });
  });
</script>
